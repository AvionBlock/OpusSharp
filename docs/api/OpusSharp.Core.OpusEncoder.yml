### YamlMime:ManagedReference
items:
- uid: OpusSharp.Core.OpusEncoder
  commentId: T:OpusSharp.Core.OpusEncoder
  id: OpusEncoder
  parent: OpusSharp.Core
  children:
  - OpusSharp.Core.OpusEncoder.#ctor(System.Int32,System.Int32,OpusSharp.Core.OpusPredefinedValues)
  - OpusSharp.Core.OpusEncoder.CheckError(System.Int32)
  - OpusSharp.Core.OpusEncoder.Ctl(OpusSharp.Core.GenericCTL)
  - OpusSharp.Core.OpusEncoder.Ctl``1(OpusSharp.Core.EncoderCTL,``0@)
  - OpusSharp.Core.OpusEncoder.Ctl``1(OpusSharp.Core.GenericCTL,``0@)
  - OpusSharp.Core.OpusEncoder.Ctl``2(OpusSharp.Core.EncoderCTL,``0@,``1@)
  - OpusSharp.Core.OpusEncoder.Dispose
  - OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
  - OpusSharp.Core.OpusEncoder.Encode(System.Byte[],System.Int32,System.Byte[],System.Int32)
  - OpusSharp.Core.OpusEncoder.Encode(System.Int16[],System.Int32,System.Byte[],System.Int32)
  - OpusSharp.Core.OpusEncoder.Encode(System.Single[],System.Int32,System.Byte[],System.Int32)
  - OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Byte},System.Int32,System.Span{System.Byte},System.Int32)
  - OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Int16},System.Int32,System.Span{System.Byte},System.Int32)
  - OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Single},System.Int32,System.Span{System.Byte},System.Int32)
  - OpusSharp.Core.OpusEncoder.ThrowIfDisposed
  - OpusSharp.Core.OpusEncoder._handler
  langs:
  - csharp
  - vb
  name: OpusEncoder
  nameWithType: OpusEncoder
  fullName: OpusSharp.Core.OpusEncoder
  type: Class
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: OpusEncoder
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 8
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: An opus encoder.
  example: []
  syntax:
    content: 'public class OpusEncoder : IDisposable'
    content.vb: Public Class OpusEncoder Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpusSharp.Core.OpusEncoder._handler
  commentId: F:OpusSharp.Core.OpusEncoder._handler
  id: _handler
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: _handler
  nameWithType: OpusEncoder._handler
  fullName: OpusSharp.Core.OpusEncoder._handler
  type: Field
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: _handler
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 13
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Direct safe handle for the <xref href="OpusSharp.Core.OpusEncoder" data-throw-if-not-resolved="false"></xref>. IT IS NOT RECOMMENDED TO CLOSE THE HANDLE DIRECTLY! Instead use <xref href="OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> to dispose the handle and object safely.
  example: []
  syntax:
    content: protected OpusEncoderSafeHandle _handler
    return:
      type: OpusSharp.Core.SafeHandlers.OpusEncoderSafeHandle
    content.vb: Protected _handler As OpusEncoderSafeHandle
- uid: OpusSharp.Core.OpusEncoder.#ctor(System.Int32,System.Int32,OpusSharp.Core.OpusPredefinedValues)
  commentId: M:OpusSharp.Core.OpusEncoder.#ctor(System.Int32,System.Int32,OpusSharp.Core.OpusPredefinedValues)
  id: '#ctor(System.Int32,System.Int32,OpusSharp.Core.OpusPredefinedValues)'
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: OpusEncoder(int, int, OpusPredefinedValues)
  nameWithType: OpusEncoder.OpusEncoder(int, int, OpusPredefinedValues)
  fullName: OpusSharp.Core.OpusEncoder.OpusEncoder(int, int, OpusSharp.Core.OpusPredefinedValues)
  type: Constructor
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: .ctor
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 23
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Creates a new opus encoder.
  example: []
  syntax:
    content: public OpusEncoder(int sample_rate, int channels, OpusPredefinedValues application)
    parameters:
    - id: sample_rate
      type: System.Int32
      description: The sample rate, this must be one of 8000, 12000, 16000, 24000, or 48000.
    - id: channels
      type: System.Int32
      description: Number of channels, this must be 1 or 2.
    - id: application
      type: OpusSharp.Core.OpusPredefinedValues
      description: Coding mode (one of <xref href="OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_VOIP" data-throw-if-not-resolved="false"></xref>, <xref href="OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_AUDIO" data-throw-if-not-resolved="false"></xref> or <xref href="OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_RESTRICTED_LOWDELAY" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(sample_rate As Integer, channels As Integer, application As OpusPredefinedValues)
  overload: OpusSharp.Core.OpusEncoder.#ctor*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  nameWithType.vb: OpusEncoder.New(Integer, Integer, OpusPredefinedValues)
  fullName.vb: OpusSharp.Core.OpusEncoder.New(Integer, Integer, OpusSharp.Core.OpusPredefinedValues)
  name.vb: New(Integer, Integer, OpusPredefinedValues)
- uid: OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Byte},System.Int32,System.Span{System.Byte},System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Byte},System.Int32,System.Span{System.Byte},System.Int32)
  id: Encode(System.Span{System.Byte},System.Int32,System.Span{System.Byte},System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Encode(Span<byte>, int, Span<byte>, int)
  nameWithType: OpusEncoder.Encode(Span<byte>, int, Span<byte>, int)
  fullName: OpusSharp.Core.OpusEncoder.Encode(System.Span<byte>, int, System.Span<byte>, int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Encode
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 40
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Encodes a pcm frame.
  example: []
  syntax:
    content: public int Encode(Span<byte> input, int frame_size, Span<byte> output, int max_data_bytes)
    parameters:
    - id: input
      type: System.Span{System.Byte}
      description: Input signal (interleaved if 2 channels). length is frame_size*channels.
    - id: frame_size
      type: System.Int32
      description: The frame size of the pcm data. This must be an Opus frame size for the encoder's sampling rate. For example, at 48 kHz the permitted values are 120, 240, 480, 960, 1920, and 2880. Passing in a duration of less than 10 ms (480 samples at 48 kHz) will prevent the encoder from using the LPC or hybrid modes.
    - id: output
      type: System.Span{System.Byte}
      description: Output payload. This must contain storage for at least max_data_bytes.
    - id: max_data_bytes
      type: System.Int32
      description: Size of the allocated memory for the output payload. This may be used to impose an upper limit on the instant bitrate, but should not be used as the only bitrate control. Use <xref href="OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE" data-throw-if-not-resolved="false"></xref> to control the bitrate.
    return:
      type: System.Int32
      description: The length of the encoded packet (in bytes).
    content.vb: Public Function Encode(input As Span(Of Byte), frame_size As Integer, output As Span(Of Byte), max_data_bytes As Integer) As Integer
  overload: OpusSharp.Core.OpusEncoder.Encode*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Encode(Span(Of Byte), Integer, Span(Of Byte), Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.Encode(System.Span(Of Byte), Integer, System.Span(Of Byte), Integer)
  name.vb: Encode(Span(Of Byte), Integer, Span(Of Byte), Integer)
- uid: OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Int16},System.Int32,System.Span{System.Byte},System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Int16},System.Int32,System.Span{System.Byte},System.Int32)
  id: Encode(System.Span{System.Int16},System.Int32,System.Span{System.Byte},System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Encode(Span<short>, int, Span<byte>, int)
  nameWithType: OpusEncoder.Encode(Span<short>, int, Span<byte>, int)
  fullName: OpusSharp.Core.OpusEncoder.Encode(System.Span<short>, int, System.Span<byte>, int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Encode
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 62
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Encodes a pcm frame.
  example: []
  syntax:
    content: public int Encode(Span<short> input, int frame_size, Span<byte> output, int max_data_bytes)
    parameters:
    - id: input
      type: System.Span{System.Int16}
      description: Input signal (interleaved if 2 channels). length is frame_size*channels*sizeof(short).
    - id: frame_size
      type: System.Int32
      description: The frame size of the pcm data. This must be an Opus frame size for the encoder's sampling rate. For example, at 48 kHz the permitted values are 120, 240, 480, 960, 1920, and 2880. Passing in a duration of less than 10 ms (480 samples at 48 kHz) will prevent the encoder from using the LPC or hybrid modes.
    - id: output
      type: System.Span{System.Byte}
      description: Output payload. This must contain storage for at least max_data_bytes.
    - id: max_data_bytes
      type: System.Int32
      description: Size of the allocated memory for the output payload. This may be used to impose an upper limit on the instant bitrate, but should not be used as the only bitrate control. Use <xref href="OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE" data-throw-if-not-resolved="false"></xref> to control the bitrate.
    return:
      type: System.Int32
      description: The length of the encoded packet (in bytes).
    content.vb: Public Function Encode(input As Span(Of Short), frame_size As Integer, output As Span(Of Byte), max_data_bytes As Integer) As Integer
  overload: OpusSharp.Core.OpusEncoder.Encode*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Encode(Span(Of Short), Integer, Span(Of Byte), Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.Encode(System.Span(Of Short), Integer, System.Span(Of Byte), Integer)
  name.vb: Encode(Span(Of Short), Integer, Span(Of Byte), Integer)
- uid: OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Single},System.Int32,System.Span{System.Byte},System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.Encode(System.Span{System.Single},System.Int32,System.Span{System.Byte},System.Int32)
  id: Encode(System.Span{System.Single},System.Int32,System.Span{System.Byte},System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Encode(Span<float>, int, Span<byte>, int)
  nameWithType: OpusEncoder.Encode(Span<float>, int, Span<byte>, int)
  fullName: OpusSharp.Core.OpusEncoder.Encode(System.Span<float>, int, System.Span<byte>, int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Encode
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 84
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Encodes a floating point pcm frame.
  example: []
  syntax:
    content: public int Encode(Span<float> input, int frame_size, Span<byte> output, int max_data_bytes)
    parameters:
    - id: input
      type: System.Span{System.Single}
      description: Input signal (interleaved if 2 channels). length is frame_size*channels*sizeof(float).
    - id: frame_size
      type: System.Int32
      description: The frame size of the pcm data. This must be an Opus frame size for the encoder's sampling rate. For example, at 48 kHz the permitted values are 120, 240, 480, 960, 1920, and 2880. Passing in a duration of less than 10 ms (480 samples at 48 kHz) will prevent the encoder from using the LPC or hybrid modes.
    - id: output
      type: System.Span{System.Byte}
      description: Output payload. This must contain storage for at least max_data_bytes.
    - id: max_data_bytes
      type: System.Int32
      description: Size of the allocated memory for the output payload. This may be used to impose an upper limit on the instant bitrate, but should not be used as the only bitrate control. Use <xref href="OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE" data-throw-if-not-resolved="false"></xref> to control the bitrate.
    return:
      type: System.Int32
      description: The length of the encoded packet (in bytes).
    content.vb: Public Function Encode(input As Span(Of Single), frame_size As Integer, output As Span(Of Byte), max_data_bytes As Integer) As Integer
  overload: OpusSharp.Core.OpusEncoder.Encode*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Encode(Span(Of Single), Integer, Span(Of Byte), Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.Encode(System.Span(Of Single), Integer, System.Span(Of Byte), Integer)
  name.vb: Encode(Span(Of Single), Integer, Span(Of Byte), Integer)
- uid: OpusSharp.Core.OpusEncoder.Encode(System.Byte[],System.Int32,System.Byte[],System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.Encode(System.Byte[],System.Int32,System.Byte[],System.Int32)
  id: Encode(System.Byte[],System.Int32,System.Byte[],System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Encode(byte[], int, byte[], int)
  nameWithType: OpusEncoder.Encode(byte[], int, byte[], int)
  fullName: OpusSharp.Core.OpusEncoder.Encode(byte[], int, byte[], int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Encode
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 106
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Encodes a pcm frame.
  example: []
  syntax:
    content: public int Encode(byte[] input, int frame_size, byte[] output, int max_data_bytes)
    parameters:
    - id: input
      type: System.Byte[]
      description: Input signal (interleaved if 2 channels). length is frame_size*channels.
    - id: frame_size
      type: System.Int32
      description: The frame size of the pcm data. This must be an Opus frame size for the encoder's sampling rate. For example, at 48 kHz the permitted values are 120, 240, 480, 960, 1920, and 2880. Passing in a duration of less than 10 ms (480 samples at 48 kHz) will prevent the encoder from using the LPC or hybrid modes.
    - id: output
      type: System.Byte[]
      description: Output payload. This must contain storage for at least max_data_bytes.
    - id: max_data_bytes
      type: System.Int32
      description: Size of the allocated memory for the output payload. This may be used to impose an upper limit on the instant bitrate, but should not be used as the only bitrate control. Use <xref href="OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE" data-throw-if-not-resolved="false"></xref> to control the bitrate.
    return:
      type: System.Int32
      description: The length of the encoded packet (in bytes).
    content.vb: Public Function Encode(input As Byte(), frame_size As Integer, output As Byte(), max_data_bytes As Integer) As Integer
  overload: OpusSharp.Core.OpusEncoder.Encode*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Encode(Byte(), Integer, Byte(), Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.Encode(Byte(), Integer, Byte(), Integer)
  name.vb: Encode(Byte(), Integer, Byte(), Integer)
- uid: OpusSharp.Core.OpusEncoder.Encode(System.Int16[],System.Int32,System.Byte[],System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.Encode(System.Int16[],System.Int32,System.Byte[],System.Int32)
  id: Encode(System.Int16[],System.Int32,System.Byte[],System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Encode(short[], int, byte[], int)
  nameWithType: OpusEncoder.Encode(short[], int, byte[], int)
  fullName: OpusSharp.Core.OpusEncoder.Encode(short[], int, byte[], int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Encode
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 118
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Encodes a pcm frame.
  example: []
  syntax:
    content: public int Encode(short[] input, int frame_size, byte[] output, int max_data_bytes)
    parameters:
    - id: input
      type: System.Int16[]
      description: Input signal (interleaved if 2 channels). length is frame_size*channels*sizeof(short).
    - id: frame_size
      type: System.Int32
      description: The frame size of the pcm data. This must be an Opus frame size for the encoder's sampling rate. For example, at 48 kHz the permitted values are 120, 240, 480, 960, 1920, and 2880. Passing in a duration of less than 10 ms (480 samples at 48 kHz) will prevent the encoder from using the LPC or hybrid modes.
    - id: output
      type: System.Byte[]
      description: Output payload. This must contain storage for at least max_data_bytes.
    - id: max_data_bytes
      type: System.Int32
      description: Size of the allocated memory for the output payload. This may be used to impose an upper limit on the instant bitrate, but should not be used as the only bitrate control. Use <xref href="OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE" data-throw-if-not-resolved="false"></xref> to control the bitrate.
    return:
      type: System.Int32
      description: The length of the encoded packet (in bytes).
    content.vb: Public Function Encode(input As Short(), frame_size As Integer, output As Byte(), max_data_bytes As Integer) As Integer
  overload: OpusSharp.Core.OpusEncoder.Encode*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Encode(Short(), Integer, Byte(), Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.Encode(Short(), Integer, Byte(), Integer)
  name.vb: Encode(Short(), Integer, Byte(), Integer)
- uid: OpusSharp.Core.OpusEncoder.Encode(System.Single[],System.Int32,System.Byte[],System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.Encode(System.Single[],System.Int32,System.Byte[],System.Int32)
  id: Encode(System.Single[],System.Int32,System.Byte[],System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Encode(float[], int, byte[], int)
  nameWithType: OpusEncoder.Encode(float[], int, byte[], int)
  fullName: OpusSharp.Core.OpusEncoder.Encode(float[], int, byte[], int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Encode
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 130
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Encodes a floating point pcm frame.
  example: []
  syntax:
    content: public int Encode(float[] input, int frame_size, byte[] output, int max_data_bytes)
    parameters:
    - id: input
      type: System.Single[]
      description: Input signal (interleaved if 2 channels). length is frame_size*channels*sizeof(float).
    - id: frame_size
      type: System.Int32
      description: The frame size of the pcm data. This must be an Opus frame size for the encoder's sampling rate. For example, at 48 kHz the permitted values are 120, 240, 480, 960, 1920, and 2880. Passing in a duration of less than 10 ms (480 samples at 48 kHz) will prevent the encoder from using the LPC or hybrid modes.
    - id: output
      type: System.Byte[]
      description: Output payload. This must contain storage for at least max_data_bytes.
    - id: max_data_bytes
      type: System.Int32
      description: Size of the allocated memory for the output payload. This may be used to impose an upper limit on the instant bitrate, but should not be used as the only bitrate control. Use <xref href="OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE" data-throw-if-not-resolved="false"></xref> to control the bitrate.
    return:
      type: System.Int32
      description: The length of the encoded packet (in bytes).
    content.vb: Public Function Encode(input As Single(), frame_size As Integer, output As Byte(), max_data_bytes As Integer) As Integer
  overload: OpusSharp.Core.OpusEncoder.Encode*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Encode(Single(), Integer, Byte(), Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.Encode(Single(), Integer, Byte(), Integer)
  name.vb: Encode(Single(), Integer, Byte(), Integer)
- uid: OpusSharp.Core.OpusEncoder.Ctl``1(OpusSharp.Core.EncoderCTL,``0@)
  commentId: M:OpusSharp.Core.OpusEncoder.Ctl``1(OpusSharp.Core.EncoderCTL,``0@)
  id: Ctl``1(OpusSharp.Core.EncoderCTL,``0@)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Ctl<T>(EncoderCTL, ref T)
  nameWithType: OpusEncoder.Ctl<T>(EncoderCTL, ref T)
  fullName: OpusSharp.Core.OpusEncoder.Ctl<T>(OpusSharp.Core.EncoderCTL, ref T)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Ctl
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 141
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Performs a ctl request.
  example: []
  syntax:
    content: 'public int Ctl<T>(EncoderCTL request, ref T value) where T : unmanaged'
    parameters:
    - id: request
      type: OpusSharp.Core.EncoderCTL
      description: The request you want to specify.
    - id: value
      type: '{T}'
      description: The input/output value.
    typeParameters:
    - id: T
      description: The type you want to input/output.
    return:
      type: System.Int32
      description: The result code of the request. See <xref href="OpusSharp.Core.OpusErrorCodes" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Ctl(Of T As Structure)(request As EncoderCTL, value As T) As Integer
  overload: OpusSharp.Core.OpusEncoder.Ctl*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Ctl(Of T)(EncoderCTL, T)
  fullName.vb: OpusSharp.Core.OpusEncoder.Ctl(Of T)(OpusSharp.Core.EncoderCTL, T)
  name.vb: Ctl(Of T)(EncoderCTL, T)
- uid: OpusSharp.Core.OpusEncoder.Ctl``2(OpusSharp.Core.EncoderCTL,``0@,``1@)
  commentId: M:OpusSharp.Core.OpusEncoder.Ctl``2(OpusSharp.Core.EncoderCTL,``0@,``1@)
  id: Ctl``2(OpusSharp.Core.EncoderCTL,``0@,``1@)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Ctl<T, T2>(EncoderCTL, ref T, ref T2)
  nameWithType: OpusEncoder.Ctl<T, T2>(EncoderCTL, ref T, ref T2)
  fullName: OpusSharp.Core.OpusEncoder.Ctl<T, T2>(OpusSharp.Core.EncoderCTL, ref T, ref T2)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Ctl
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 163
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Performs a ctl request.
  example: []
  syntax:
    content: 'public int Ctl<T, T2>(EncoderCTL request, ref T value, ref T2 value2) where T : unmanaged where T2 : unmanaged'
    parameters:
    - id: request
      type: OpusSharp.Core.EncoderCTL
      description: The request you want to specify.
    - id: value
      type: '{T}'
      description: The input/output value.
    - id: value2
      type: '{T2}'
      description: The second input/output value.
    typeParameters:
    - id: T
      description: The type you want to input/output.
    - id: T2
      description: The second type you want to input/output.
    return:
      type: System.Int32
      description: The result code of the request. See <xref href="OpusSharp.Core.OpusErrorCodes" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Ctl(Of T As Structure, T2 As Structure)(request As EncoderCTL, value As T, value2 As T2) As Integer
  overload: OpusSharp.Core.OpusEncoder.Ctl*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Ctl(Of T, T2)(EncoderCTL, T, T2)
  fullName.vb: OpusSharp.Core.OpusEncoder.Ctl(Of T, T2)(OpusSharp.Core.EncoderCTL, T, T2)
  name.vb: Ctl(Of T, T2)(EncoderCTL, T, T2)
- uid: OpusSharp.Core.OpusEncoder.Ctl(OpusSharp.Core.GenericCTL)
  commentId: M:OpusSharp.Core.OpusEncoder.Ctl(OpusSharp.Core.GenericCTL)
  id: Ctl(OpusSharp.Core.GenericCTL)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Ctl(GenericCTL)
  nameWithType: OpusEncoder.Ctl(GenericCTL)
  fullName: OpusSharp.Core.OpusEncoder.Ctl(OpusSharp.Core.GenericCTL)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Ctl
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 184
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Performs a ctl request.
  example: []
  syntax:
    content: public int Ctl(GenericCTL request)
    parameters:
    - id: request
      type: OpusSharp.Core.GenericCTL
      description: The request you want to specify.
    return:
      type: System.Int32
      description: The result code of the request. See <xref href="OpusSharp.Core.OpusErrorCodes" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Ctl(request As GenericCTL) As Integer
  overload: OpusSharp.Core.OpusEncoder.Ctl*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
- uid: OpusSharp.Core.OpusEncoder.Ctl``1(OpusSharp.Core.GenericCTL,``0@)
  commentId: M:OpusSharp.Core.OpusEncoder.Ctl``1(OpusSharp.Core.GenericCTL,``0@)
  id: Ctl``1(OpusSharp.Core.GenericCTL,``0@)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Ctl<T>(GenericCTL, ref T)
  nameWithType: OpusEncoder.Ctl<T>(GenericCTL, ref T)
  fullName: OpusSharp.Core.OpusEncoder.Ctl<T>(OpusSharp.Core.GenericCTL, ref T)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Ctl
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 201
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Performs a ctl request.
  example: []
  syntax:
    content: 'public int Ctl<T>(GenericCTL request, ref T value) where T : unmanaged'
    parameters:
    - id: request
      type: OpusSharp.Core.GenericCTL
      description: The request you want to specify.
    - id: value
      type: '{T}'
      description: The input/output value.
    typeParameters:
    - id: T
      description: The type you want to input/output.
    return:
      type: System.Int32
      description: The result code of the request. See <xref href="OpusSharp.Core.OpusErrorCodes" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Ctl(Of T As Structure)(request As GenericCTL, value As T) As Integer
  overload: OpusSharp.Core.OpusEncoder.Ctl*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
  nameWithType.vb: OpusEncoder.Ctl(Of T)(GenericCTL, T)
  fullName.vb: OpusSharp.Core.OpusEncoder.Ctl(Of T)(OpusSharp.Core.GenericCTL, T)
  name.vb: Ctl(Of T)(GenericCTL, T)
- uid: OpusSharp.Core.OpusEncoder.Dispose
  commentId: M:OpusSharp.Core.OpusEncoder.Dispose
  id: Dispose
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: OpusEncoder.Dispose()
  fullName: OpusSharp.Core.OpusEncoder.Dispose()
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Dispose
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 213
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: OpusSharp.Core.OpusEncoder.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
  commentId: M:OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: OpusEncoder.Dispose(bool)
  fullName: OpusSharp.Core.OpusEncoder.Dispose(bool)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: Dispose
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 223
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Dispose logic.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Set to true if fully disposing.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: OpusSharp.Core.OpusEncoder.Dispose*
  nameWithType.vb: OpusEncoder.Dispose(Boolean)
  fullName.vb: OpusSharp.Core.OpusEncoder.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: OpusSharp.Core.OpusEncoder.ThrowIfDisposed
  commentId: M:OpusSharp.Core.OpusEncoder.ThrowIfDisposed
  id: ThrowIfDisposed
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: ThrowIfDisposed()
  nameWithType: OpusEncoder.ThrowIfDisposed()
  fullName: OpusSharp.Core.OpusEncoder.ThrowIfDisposed()
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: ThrowIfDisposed
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 240
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Throws an exception if this object is disposed or the handler is closed.
  example: []
  syntax:
    content: protected virtual void ThrowIfDisposed()
    content.vb: Protected Overridable Sub ThrowIfDisposed()
  overload: OpusSharp.Core.OpusEncoder.ThrowIfDisposed*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: ''
- uid: OpusSharp.Core.OpusEncoder.CheckError(System.Int32)
  commentId: M:OpusSharp.Core.OpusEncoder.CheckError(System.Int32)
  id: CheckError(System.Int32)
  parent: OpusSharp.Core.OpusEncoder
  langs:
  - csharp
  - vb
  name: CheckError(int)
  nameWithType: OpusEncoder.CheckError(int)
  fullName: OpusSharp.Core.OpusEncoder.CheckError(int)
  type: Method
  source:
    remote:
      path: OpusSharp.Core/OpusEncoder.cs
      branch: dev
      repo: https://github.com/AvionBlock/OpusSharp.git
    id: CheckError
    path: ../OpusSharp.Core/OpusEncoder.cs
    startLine: 251
  assemblies:
  - OpusSharp
  namespace: OpusSharp.Core
  summary: Checks if there is an opus error and throws if the error is a negative value.
  example: []
  syntax:
    content: protected void CheckError(int error)
    parameters:
    - id: error
      type: System.Int32
      description: The error code to input.
    content.vb: Protected Sub CheckError([error] As Integer)
  overload: OpusSharp.Core.OpusEncoder.CheckError*
  exceptions:
  - type: OpusSharp.Core.OpusException
    commentId: T:OpusSharp.Core.OpusException
    description: ''
  nameWithType.vb: OpusEncoder.CheckError(Integer)
  fullName.vb: OpusSharp.Core.OpusEncoder.CheckError(Integer)
  name.vb: CheckError(Integer)
references:
- uid: OpusSharp.Core
  commentId: N:OpusSharp.Core
  href: OpusSharp.html
  name: OpusSharp.Core
  nameWithType: OpusSharp.Core
  fullName: OpusSharp.Core
  spec.csharp:
  - uid: OpusSharp
    name: OpusSharp
    href: OpusSharp.html
  - name: .
  - uid: OpusSharp.Core
    name: Core
    href: OpusSharp.Core.html
  spec.vb:
  - uid: OpusSharp
    name: OpusSharp
    href: OpusSharp.html
  - name: .
  - uid: OpusSharp.Core
    name: Core
    href: OpusSharp.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpusSharp.Core.OpusEncoder
  commentId: T:OpusSharp.Core.OpusEncoder
  href: OpusSharp.Core.OpusEncoder.html
  name: OpusEncoder
  nameWithType: OpusEncoder
  fullName: OpusSharp.Core.OpusEncoder
- uid: OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
  commentId: M:OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
  isExternal: true
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: OpusEncoder.Dispose(bool)
  fullName: OpusSharp.Core.OpusEncoder.Dispose(bool)
  nameWithType.vb: OpusEncoder.Dispose(Boolean)
  fullName.vb: OpusSharp.Core.OpusEncoder.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
    name: Dispose
    href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: OpusSharp.Core.OpusEncoder.Dispose(System.Boolean)
    name: Dispose
    href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: OpusSharp.Core.SafeHandlers.OpusEncoderSafeHandle
  commentId: T:OpusSharp.Core.SafeHandlers.OpusEncoderSafeHandle
  parent: OpusSharp.Core.SafeHandlers
  href: OpusSharp.Core.SafeHandlers.OpusEncoderSafeHandle.html
  name: OpusEncoderSafeHandle
  nameWithType: OpusEncoderSafeHandle
  fullName: OpusSharp.Core.SafeHandlers.OpusEncoderSafeHandle
- uid: OpusSharp.Core.SafeHandlers
  commentId: N:OpusSharp.Core.SafeHandlers
  href: OpusSharp.html
  name: OpusSharp.Core.SafeHandlers
  nameWithType: OpusSharp.Core.SafeHandlers
  fullName: OpusSharp.Core.SafeHandlers
  spec.csharp:
  - uid: OpusSharp
    name: OpusSharp
    href: OpusSharp.html
  - name: .
  - uid: OpusSharp.Core
    name: Core
    href: OpusSharp.Core.html
  - name: .
  - uid: OpusSharp.Core.SafeHandlers
    name: SafeHandlers
    href: OpusSharp.Core.SafeHandlers.html
  spec.vb:
  - uid: OpusSharp
    name: OpusSharp
    href: OpusSharp.html
  - name: .
  - uid: OpusSharp.Core
    name: Core
    href: OpusSharp.Core.html
  - name: .
  - uid: OpusSharp.Core.SafeHandlers
    name: SafeHandlers
    href: OpusSharp.Core.SafeHandlers.html
- uid: OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_VOIP
  commentId: F:OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_VOIP
  href: OpusSharp.Core.OpusPredefinedValues.html#OpusSharp_Core_OpusPredefinedValues_OPUS_APPLICATION_VOIP
  name: OPUS_APPLICATION_VOIP
  nameWithType: OpusPredefinedValues.OPUS_APPLICATION_VOIP
  fullName: OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_VOIP
- uid: OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_AUDIO
  commentId: F:OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_AUDIO
  href: OpusSharp.Core.OpusPredefinedValues.html#OpusSharp_Core_OpusPredefinedValues_OPUS_APPLICATION_AUDIO
  name: OPUS_APPLICATION_AUDIO
  nameWithType: OpusPredefinedValues.OPUS_APPLICATION_AUDIO
  fullName: OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_AUDIO
- uid: OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_RESTRICTED_LOWDELAY
  commentId: F:OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_RESTRICTED_LOWDELAY
  href: OpusSharp.Core.OpusPredefinedValues.html#OpusSharp_Core_OpusPredefinedValues_OPUS_APPLICATION_RESTRICTED_LOWDELAY
  name: OPUS_APPLICATION_RESTRICTED_LOWDELAY
  nameWithType: OpusPredefinedValues.OPUS_APPLICATION_RESTRICTED_LOWDELAY
  fullName: OpusSharp.Core.OpusPredefinedValues.OPUS_APPLICATION_RESTRICTED_LOWDELAY
- uid: OpusSharp.Core.OpusException
  commentId: T:OpusSharp.Core.OpusException
  href: OpusSharp.Core.OpusException.html
  name: OpusException
  nameWithType: OpusException
  fullName: OpusSharp.Core.OpusException
- uid: OpusSharp.Core.OpusEncoder.#ctor*
  commentId: Overload:OpusSharp.Core.OpusEncoder.#ctor
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder__ctor_System_Int32_System_Int32_OpusSharp_Core_OpusPredefinedValues_
  name: OpusEncoder
  nameWithType: OpusEncoder.OpusEncoder
  fullName: OpusSharp.Core.OpusEncoder.OpusEncoder
  nameWithType.vb: OpusEncoder.New
  fullName.vb: OpusSharp.Core.OpusEncoder.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpusSharp.Core.OpusPredefinedValues
  commentId: T:OpusSharp.Core.OpusPredefinedValues
  parent: OpusSharp.Core
  href: OpusSharp.Core.OpusPredefinedValues.html
  name: OpusPredefinedValues
  nameWithType: OpusPredefinedValues
  fullName: OpusSharp.Core.OpusPredefinedValues
- uid: OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE
  commentId: F:OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE
  href: OpusSharp.Core.EncoderCTL.html#OpusSharp_Core_EncoderCTL_OPUS_SET_BITRATE
  name: OPUS_SET_BITRATE
  nameWithType: EncoderCTL.OPUS_SET_BITRATE
  fullName: OpusSharp.Core.EncoderCTL.OPUS_SET_BITRATE
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.objectdisposedexception
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: OpusSharp.Core.OpusEncoder.Encode*
  commentId: Overload:OpusSharp.Core.OpusEncoder.Encode
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_Encode_System_Span_System_Byte__System_Int32_System_Span_System_Byte__System_Int32_
  name: Encode
  nameWithType: OpusEncoder.Encode
  fullName: OpusSharp.Core.OpusEncoder.Encode
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Span{System.Int16}
  commentId: T:System.Span{System.Int16}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<short>
  nameWithType: Span<short>
  fullName: System.Span<short>
  nameWithType.vb: Span(Of Short)
  fullName.vb: System.Span(Of Short)
  name.vb: Span(Of Short)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: )
- uid: System.Span{System.Single}
  commentId: T:System.Span{System.Single}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<float>
  nameWithType: Span<float>
  fullName: System.Span<float>
  nameWithType.vb: Span(Of Single)
  fullName.vb: System.Span(Of Single)
  name.vb: Span(Of Single)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Int16[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short[]
  nameWithType: short[]
  fullName: short[]
  nameWithType.vb: Short()
  fullName.vb: Short()
  name.vb: Short()
  spec.csharp:
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: (
  - name: )
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: OpusSharp.Core.OpusErrorCodes
  commentId: T:OpusSharp.Core.OpusErrorCodes
  parent: OpusSharp.Core
  href: OpusSharp.Core.OpusErrorCodes.html
  name: OpusErrorCodes
  nameWithType: OpusErrorCodes
  fullName: OpusSharp.Core.OpusErrorCodes
- uid: OpusSharp.Core.OpusEncoder.Ctl*
  commentId: Overload:OpusSharp.Core.OpusEncoder.Ctl
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_Ctl__1_OpusSharp_Core_EncoderCTL___0__
  name: Ctl
  nameWithType: OpusEncoder.Ctl
  fullName: OpusSharp.Core.OpusEncoder.Ctl
- uid: OpusSharp.Core.EncoderCTL
  commentId: T:OpusSharp.Core.EncoderCTL
  parent: OpusSharp.Core
  href: OpusSharp.Core.EncoderCTL.html
  name: EncoderCTL
  nameWithType: EncoderCTL
  fullName: OpusSharp.Core.EncoderCTL
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T2
  commentId: '!:T2'
  name: T2
  nameWithType: T2
  fullName: T2
- uid: OpusSharp.Core.GenericCTL
  commentId: T:OpusSharp.Core.GenericCTL
  parent: OpusSharp.Core
  href: OpusSharp.Core.GenericCTL.html
  name: GenericCTL
  nameWithType: GenericCTL
  fullName: OpusSharp.Core.GenericCTL
- uid: OpusSharp.Core.OpusEncoder.Dispose*
  commentId: Overload:OpusSharp.Core.OpusEncoder.Dispose
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_Dispose
  name: Dispose
  nameWithType: OpusEncoder.Dispose
  fullName: OpusSharp.Core.OpusEncoder.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpusSharp.Core.OpusEncoder.ThrowIfDisposed*
  commentId: Overload:OpusSharp.Core.OpusEncoder.ThrowIfDisposed
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_ThrowIfDisposed
  name: ThrowIfDisposed
  nameWithType: OpusEncoder.ThrowIfDisposed
  fullName: OpusSharp.Core.OpusEncoder.ThrowIfDisposed
- uid: OpusSharp.Core.OpusEncoder.CheckError*
  commentId: Overload:OpusSharp.Core.OpusEncoder.CheckError
  href: OpusSharp.Core.OpusEncoder.html#OpusSharp_Core_OpusEncoder_CheckError_System_Int32_
  name: CheckError
  nameWithType: OpusEncoder.CheckError
  fullName: OpusSharp.Core.OpusEncoder.CheckError

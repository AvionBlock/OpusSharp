name: Opus Compile

on:
  workflow_dispatch:

jobs:
  Linux_Build_x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64-libopus.so.0.10.1
          path: ./build/libopus.so.0.10.1

  Linux_Build_x32:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Libraries
        run: sudo apt-get install g++-multilib

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86-libopus.so.0.10.1
          path: ./build/libopus.so.0.10.1

  Linux_Build_Arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Libraries
        run: sudo apt-get install g++-aarch64-linux-gnu

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-libopus.so.0.10.1
          path: ./build/libopus.so.0.10.1

  Linux_Build_Arm32:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Libraries
        run: sudo apt-get install g++-arm-linux-gnueabi

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DCMAKE_C_COMPILER=arm-linux-gnueabi-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabi-g++

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm32-libopus.so.0.10.1
          path: ./build/libopus.so.0.10.1
          
  Win_Build_x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.bat

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-x64-opus.dll
          path: ./build/Release/opus.dll

  Win_Build_x32:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.bat

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-x32-opus.dll
          path: ./build/Release/opus.dll
          
  Win_Build_arm64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.bat

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -G "Visual Studio 17 2022" -A ARM64 -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-arm64-opus.dll
          path: ./build/Release/opus.dll

  Win_Build_arm32:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.bat

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -G "Visual Studio 17 2022" -A ARM -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-arm32-opus.dll
          path: ./build/Release/opus.dll

  Android_Build_x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27b
          add-to-path: false
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86_64 -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-x64-libopus.so
          path: ./build/libopus.so

  Android_Build_x32:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27b
          add-to-path: false
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI=x86 -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-x32-libopus.so
          path: ./build/libopus.so
          
  Android_Build_Arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27b
          add-to-path: false
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-arm64-libopus.so
          path: ./build/libopus.so

  Android_Build_Arm32:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27b
          add-to-path: false
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Clone Repository
        run: git clone https://github.com/xiph/opus.git

      - name: Autogen
        run: ./opus/autogen.sh

      - name: Create Build Dir
        run: mkdir build

      - name: Configure
        working-directory: ./build
        run: cmake ../opus -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake -DANDROID_ABI=armeabi-v7a -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DOPUS_BUILD_PROGRAMS=ON -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=ON

      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config Release --target package

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-arm32-libopus.so
          path: ./build/libopus.so
